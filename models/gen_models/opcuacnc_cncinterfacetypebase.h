/******************************************************************************
** opcuacnc_cncinterfacetypebase.h
**
**   **************************** auto-generated ****************************
**     This code was generated by a tool: UaModeler
**     Runtime Version: 1.5.0, using C++ OPC UA SDK 1.5.0 template (version 4)
**
**     Changes to this file may cause incorrect behavior and will be lost if
**     the code is regenerated.
**   **************************** auto-generated ****************************
**
** Copyright (c) 2006-2016 Unified Automation GmbH. All rights reserved.
**
** Software License Agreement ("SLA") Version 2.5
**
** Unless explicitly acquired and licensed from Licensor under another
** license, the contents of this file are subject to the Software License
** Agreement ("SLA") Version 2.5, or subsequent versions
** as allowed by the SLA, and You may not copy or use this file in either
** source code or executable form, except in compliance with the terms and
** conditions of the SLA.
**
** All software distributed under the SLA is provided strictly on an
** "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
** AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT
** LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
** PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific
** language governing rights and limitations under the SLA.
**
** The complete license agreement can be found here:
** http://unifiedautomation.com/License/SLA/2.5/
**
** Project: C++ OPC Server SDK information model for namespace http://opcfoundation.org/UA/CNC/
**
** Description: OPC Unified Architecture Software Development Kit.
**
** Created: 19.08.2016
**
******************************************************************************/

#ifndef __OPCUACNC_CNCINTERFACETYPEBASE_H__
#define __OPCUACNC_CNCINTERFACETYPEBASE_H__

#include "opcua_baseobjecttype.h"
#include "opcuacnc_datatypes.h"
#include "basenodes.h"
#include "opcua_propertytype.h"
#include "opcuacnc_identifiers.h"
#include "opcuacnc_instancefactory_cnc.h"

// Namespace for the UA information model http://opcfoundation.org/UA/CNC/
namespace OpcUaCnc {

class CncAxisListType;
class CncChannelListType;
class CncSpindleListType;

/** Generated base class for a CncInterfaceType.
 *
 *  This class contains the generated base code for the object type CncInterfaceType
 *  representing an OPC UA ObjectType. This class is used to create the object type and to
 *  create and represent instances of the object type in the server address space.
 *
 *  **Object members of the CncInterfaceType:**
 *
 *  Browse Name    | TypeDefinition     | Modelling Rule | See Also
 *  ---------------|--------------------|----------------|-----------------------
 *  CncAxisList    | CncAxisListType    | Mandatory      | \ref getCncAxisList
 *  CncChannelList | CncChannelListType | Mandatory      | \ref getCncChannelList
 *  CncSpindleList | CncSpindleListType | Mandatory      | \ref getCncSpindleList
 *
 *  **Variable members of the CncInterfaceType:**
 *
 *  Browse Name    | DataType | TypeDefinition | Modelling Rule | See Also
 *  ---------------|----------|----------------|----------------|-----------------------------------------------
 *  Fix            | String   | PropertyType   | Optional       | \ref getFix, \ref setFix
 *  Revision       | String   | PropertyType   | Mandatory      | \ref getRevision, \ref setRevision
 *  VendorName     | String   | PropertyType   | Mandatory      | \ref getVendorName, \ref setVendorName
 *  VendorRevision | String   | PropertyType   | Mandatory      | \ref getVendorRevision, \ref setVendorRevision
 *  Version        | String   | PropertyType   | Mandatory      | \ref getVersion, \ref setVersion
 *
 */
class UAMODELS_EXPORT CncInterfaceTypeBase:
    public OpcUa::BaseObjectType
{
    UA_DISABLE_COPY(CncInterfaceTypeBase);
protected:
    virtual ~CncInterfaceTypeBase();
public:
    // construction / destruction
    CncInterfaceTypeBase(const UaNodeId& nodeId, UaObject* pInstanceDeclarationObject, NodeManagerConfig* pNodeConfig, UaMutexRefCounted* pSharedMutex = NULL);
    CncInterfaceTypeBase(const UaNodeId& nodeId, const UaString& name, OpcUa_UInt16 browseNameNameSpaceIndex, NodeManagerConfig* pNodeConfig, UaMutexRefCounted* pSharedMutex = NULL);
    CncInterfaceTypeBase(
        UaBase::Object*    pBaseNode,
        XmlUaNodeFactoryManager*   pFactory,
        NodeManagerConfig* pNodeConfig,
        UaMutexRefCounted* pSharedMutex = NULL);
    static void createTypes();
    static void clearStaticMembers();

    virtual UaNodeId       typeDefinitionId() const;


    virtual void setFix(const UaString& Fix);
    virtual UaString getFix() const;

    virtual void setRevision(const UaString& Revision);
    virtual UaString getRevision() const;

    virtual void setVendorName(const UaString& VendorName);
    virtual UaString getVendorName() const;

    virtual void setVendorRevision(const UaString& VendorRevision);
    virtual UaString getVendorRevision() const;

    virtual void setVersion(const UaString& Version);
    virtual UaString getVersion() const;

    virtual OpcUaCnc::CncAxisListType* getCncAxisList();
    virtual const OpcUaCnc::CncAxisListType* getCncAxisList() const;
    virtual OpcUaCnc::CncChannelListType* getCncChannelList();
    virtual const OpcUaCnc::CncChannelListType* getCncChannelList() const;
    virtual OpcUaCnc::CncSpindleListType* getCncSpindleList();
    virtual const OpcUaCnc::CncSpindleListType* getCncSpindleList() const;
    virtual OpcUa::PropertyType* getFixNode();
    virtual const OpcUa::PropertyType* getFixNode() const;
    virtual OpcUa::PropertyType* getRevisionNode();
    virtual const OpcUa::PropertyType* getRevisionNode() const;
    virtual OpcUa::PropertyType* getVendorNameNode();
    virtual const OpcUa::PropertyType* getVendorNameNode() const;
    virtual OpcUa::PropertyType* getVendorRevisionNode();
    virtual const OpcUa::PropertyType* getVendorRevisionNode() const;
    virtual OpcUa::PropertyType* getVersionNode();
    virtual const OpcUa::PropertyType* getVersionNode() const;

    // NodeAccessInfo management
    virtual void useAccessInfoFromType();
    void useAccessInfoFromInstance(CncInterfaceTypeBase *pInstance);

protected:
    // Object nodes
    // Object CncAxisList
    static OpcUaCnc::CncAxisListType*  s_pCncAxisList;
    OpcUaCnc::CncAxisListType*  m_pCncAxisList;
    // Object CncChannelList
    static OpcUaCnc::CncChannelListType*  s_pCncChannelList;
    OpcUaCnc::CncChannelListType*  m_pCncChannelList;
    // Object CncSpindleList
    static OpcUaCnc::CncSpindleListType*  s_pCncSpindleList;
    OpcUaCnc::CncSpindleListType*  m_pCncSpindleList;

    // Variable nodes
    // Variable Fix
    static OpcUa::PropertyType*  s_pFix;
    OpcUa::PropertyType*  m_pFix;
    // Variable Revision
    static OpcUa::PropertyType*  s_pRevision;
    OpcUa::PropertyType*  m_pRevision;
    // Variable VendorName
    static OpcUa::PropertyType*  s_pVendorName;
    OpcUa::PropertyType*  m_pVendorName;
    // Variable VendorRevision
    static OpcUa::PropertyType*  s_pVendorRevision;
    OpcUa::PropertyType*  m_pVendorRevision;
    // Variable Version
    static OpcUa::PropertyType*  s_pVersion;
    OpcUa::PropertyType*  m_pVersion;



private:
    void initialize();

private:
    static bool s_typeNodesCreated;
};

} // End namespace for the UA information model http://opcfoundation.org/UA/CNC/

#endif // #ifndef __OPCUACNCCNCINTERFACETYPEBASE_H__


