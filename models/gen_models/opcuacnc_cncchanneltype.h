/******************************************************************************
** opcuacnc_cncchanneltype.h
**
**   **************************** auto-generated ****************************
**     This code was generated by a tool: UaModeler
**     Runtime Version: 1.5.0, using C++ OPC UA SDK 1.5.0 template (version 4)
**
**     This is a template file that was generated for your convenience.
**     This file will not be overwritten when generating code again.
**     ADD YOUR IMPLEMTATION HERE!
**   **************************** auto-generated ****************************
**
** Copyright (c) 2006-2016 Unified Automation GmbH. All rights reserved.
**
** Software License Agreement ("SLA") Version 2.5
**
** Unless explicitly acquired and licensed from Licensor under another
** license, the contents of this file are subject to the Software License
** Agreement ("SLA") Version 2.5, or subsequent versions
** as allowed by the SLA, and You may not copy or use this file in either
** source code or executable form, except in compliance with the terms and
** conditions of the SLA.
**
** All software distributed under the SLA is provided strictly on an
** "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
** AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT
** LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
** PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific
** language governing rights and limitations under the SLA.
**
** The complete license agreement can be found here:
** http://unifiedautomation.com/License/SLA/2.5/
**
** Project: C++ OPC Server SDK information model for namespace http://opcfoundation.org/UA/CNC/
**
** Description: OPC Unified Architecture Software Development Kit.
**
** Created: 19.08.2016
**
******************************************************************************/

#ifndef __OPCUACNC_CNCCHANNELTYPE_H__
#define __OPCUACNC_CNCCHANNELTYPE_H__

#include "opcuacnc_cncchanneltypebase.h"

// Namespace for the UA information model http://opcfoundation.org/UA/CNC/
namespace OpcUaCnc {

/** @brief Class implementing the UaObject interface for the CncChannelType.
 *
 * OPC UA Objects are used to represent systems, system components, real-world objects and software
 * objects. They have the NodeClass Object. The detailed description of Objects and their attributes
 * can be found in the general description of the Object node class.
 *
 *  **Object members of the CncChannelType:**
 *
 *  Browse Name    | TypeDefinition | Modelling Rule      | See Also
 *  ---------------|----------------|---------------------|---------
 *  \<CncAxis\>    | CncAxisType    | OptionalPlaceholder | &nbsp;
 *  \<CncSpindle\> | CncSpindleType | OptionalPlaceholder | &nbsp;
 *
 *  **Variable members of the CncChannelType:**
 *
 *  Browse Name              | DataType                | TypeDefinition          | Modelling Rule | See Also
 *  -------------------------|-------------------------|-------------------------|----------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
 *  ActFeedrate              | Double                  | AnalogItemType          | Mandatory      | \ref CncChannelTypeBase::getActFeedrate "getActFeedrate", \ref CncChannelTypeBase::setActFeedrate "setActFeedrate"
 *  ActGFunctions            | UInt32                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActGFunctions "getActGFunctions", \ref CncChannelTypeBase::setActGFunctions "setActGFunctions"
 *  ActJogIncrement          | Double                  | AnalogItemType          | Mandatory      | \ref CncChannelTypeBase::getActJogIncrement "getActJogIncrement", \ref CncChannelTypeBase::setActJogIncrement "setActJogIncrement"
 *  ActMainProgramFile       | String                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActMainProgramFile "getActMainProgramFile", \ref CncChannelTypeBase::setActMainProgramFile "setActMainProgramFile"
 *  ActMainProgramFileOffset | UInt32                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActMainProgramFileOffset "getActMainProgramFileOffset", \ref CncChannelTypeBase::setActMainProgramFileOffset "setActMainProgramFileOffset"
 *  ActMainProgramLine       | String                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActMainProgramLine "getActMainProgramLine", \ref CncChannelTypeBase::setActMainProgramLine "setActMainProgramLine"
 *  ActMainProgramName       | String                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActMainProgramName "getActMainProgramName", \ref CncChannelTypeBase::setActMainProgramName "setActMainProgramName"
 *  ActMFunctions            | UInt32                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActMFunctions "getActMFunctions", \ref CncChannelTypeBase::setActMFunctions "setActMFunctions"
 *  ActModalOffsetFunction   | UInt32                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActModalOffsetFunction "getActModalOffsetFunction", \ref CncChannelTypeBase::setActModalOffsetFunction "setActModalOffsetFunction"
 *  ActOperationMode         | CncOperationMode        | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActOperationMode "getActOperationMode", \ref CncChannelTypeBase::setActOperationMode "setActOperationMode"
 *  ActOverride              | Double                  | AnalogItemType          | Mandatory      | \ref CncChannelTypeBase::getActOverride "getActOverride", \ref CncChannelTypeBase::setActOverride "setActOverride"
 *  ActProgramBlock          | String                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActProgramBlock "getActProgramBlock", \ref CncChannelTypeBase::setActProgramBlock "setActProgramBlock"
 *  ActProgramFile           | String                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActProgramFile "getActProgramFile", \ref CncChannelTypeBase::setActProgramFile "setActProgramFile"
 *  ActProgramFileOffset     | UInt32                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActProgramFileOffset "getActProgramFileOffset", \ref CncChannelTypeBase::setActProgramFileOffset "setActProgramFileOffset"
 *  ActProgramLine           | String                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActProgramLine "getActProgramLine", \ref CncChannelTypeBase::setActProgramLine "setActProgramLine"
 *  ActProgramName           | String                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActProgramName "getActProgramName", \ref CncChannelTypeBase::setActProgramName "setActProgramName"
 *  ActProgramStatus         | CncChannelProgramStatus | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActProgramStatus "getActProgramStatus", \ref CncChannelTypeBase::setActProgramStatus "setActProgramStatus"
 *  ActStatus                | CncChannelStatus        | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getActStatus "getActStatus", \ref CncChannelTypeBase::setActStatus "setActStatus"
 *  BlockMode                | Boolean                 | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getBlockMode "getBlockMode", \ref CncChannelTypeBase::setBlockMode "setBlockMode"
 *  CmdFeedrate              | Double                  | AnalogItemType          | Mandatory      | \ref CncChannelTypeBase::getCmdFeedrate "getCmdFeedrate", \ref CncChannelTypeBase::setCmdFeedrate "setCmdFeedrate"
 *  CmdOverride              | Double                  | AnalogItemType          | Mandatory      | \ref CncChannelTypeBase::getCmdOverride "getCmdOverride", \ref CncChannelTypeBase::setCmdOverride "setCmdOverride"
 *  DryRunFeed               | Double                  | AnalogItemType          | Mandatory      | \ref CncChannelTypeBase::getDryRunFeed "getDryRunFeed", \ref CncChannelTypeBase::setDryRunFeed "setDryRunFeed"
 *  FeedHold                 | Double                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getFeedHold "getFeedHold", \ref CncChannelTypeBase::setFeedHold "setFeedHold"
 *  Id                       | UInt32                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getId "getId", \ref CncChannelTypeBase::setId "setId"
 *  PosTcpBcsA               | CncPositionType         | CncPositionVariableType | Mandatory      | \ref CncChannelTypeBase::getPosTcpBcsA "getPosTcpBcsA", \ref CncChannelTypeBase::setPosTcpBcsA "setPosTcpBcsA"
 *  PosTcpBcsB               | CncPositionType         | CncPositionVariableType | Mandatory      | \ref CncChannelTypeBase::getPosTcpBcsB "getPosTcpBcsB", \ref CncChannelTypeBase::setPosTcpBcsB "setPosTcpBcsB"
 *  PosTcpBcsC               | CncPositionType         | CncPositionVariableType | Mandatory      | \ref CncChannelTypeBase::getPosTcpBcsC "getPosTcpBcsC", \ref CncChannelTypeBase::setPosTcpBcsC "setPosTcpBcsC"
 *  PosTcpBcsX               | CncPositionType         | CncPositionVariableType | Mandatory      | \ref CncChannelTypeBase::getPosTcpBcsX "getPosTcpBcsX", \ref CncChannelTypeBase::setPosTcpBcsX "setPosTcpBcsX"
 *  PosTcpBcsY               | CncPositionType         | CncPositionVariableType | Mandatory      | \ref CncChannelTypeBase::getPosTcpBcsY "getPosTcpBcsY", \ref CncChannelTypeBase::setPosTcpBcsY "setPosTcpBcsY"
 *  PosTcpBcsZ               | CncPositionType         | CncPositionVariableType | Mandatory      | \ref CncChannelTypeBase::getPosTcpBcsZ "getPosTcpBcsZ", \ref CncChannelTypeBase::setPosTcpBcsZ "setPosTcpBcsZ"
 *  PosTcpWcsA               | CncPositionType         | CncPositionVariableType | Mandatory      | \ref CncChannelTypeBase::getPosTcpWcsA "getPosTcpWcsA", \ref CncChannelTypeBase::setPosTcpWcsA "setPosTcpWcsA"
 *  PosTcpWcsB               | CncPositionType         | CncPositionVariableType | Mandatory      | \ref CncChannelTypeBase::getPosTcpWcsB "getPosTcpWcsB", \ref CncChannelTypeBase::setPosTcpWcsB "setPosTcpWcsB"
 *  PosTcpWcsC               | CncPositionType         | CncPositionVariableType | Mandatory      | \ref CncChannelTypeBase::getPosTcpWcsC "getPosTcpWcsC", \ref CncChannelTypeBase::setPosTcpWcsC "setPosTcpWcsC"
 *  PosTcpWcsX               | CncPositionType         | CncPositionVariableType | Mandatory      | \ref CncChannelTypeBase::getPosTcpWcsX "getPosTcpWcsX", \ref CncChannelTypeBase::setPosTcpWcsX "setPosTcpWcsX"
 *  PosTcpWcsY               | CncPositionType         | CncPositionVariableType | Mandatory      | \ref CncChannelTypeBase::getPosTcpWcsY "getPosTcpWcsY", \ref CncChannelTypeBase::setPosTcpWcsY "setPosTcpWcsY"
 *  PosTcpWcsZ               | CncPositionType         | CncPositionVariableType | Mandatory      | \ref CncChannelTypeBase::getPosTcpWcsZ "getPosTcpWcsZ", \ref CncChannelTypeBase::setPosTcpWcsZ "setPosTcpWcsZ"
 *  ToolId                   | UInt32                  | DataItemType            | Mandatory      | \ref CncChannelTypeBase::getToolId "getToolId", \ref CncChannelTypeBase::setToolId "setToolId"
 *
 */
class UAMODELS_EXPORT CncChannelType:
    public CncChannelTypeBase
{
    UA_DISABLE_COPY(CncChannelType);
protected:
    // destruction
    virtual ~CncChannelType();
public:
    // construction
    CncChannelType(const UaNodeId& nodeId, UaObject* pInstanceDeclarationObject, NodeManagerConfig* pNodeConfig, UaMutexRefCounted* pSharedMutex = NULL);
    CncChannelType(const UaNodeId& nodeId, const UaString& name, OpcUa_UInt16 browseNameNameSpaceIndex, NodeManagerConfig* pNodeConfig, UaMutexRefCounted* pSharedMutex = NULL);
    CncChannelType(
        UaBase::Object*    pBaseNode,
        XmlUaNodeFactoryManager*   pFactory,
        NodeManagerConfig* pNodeConfig,
        UaMutexRefCounted* pSharedMutex = NULL);
    static void createTypes();
    static void clearStaticMembers();


protected:

private:
};

} // End namespace for the UA information model http://opcfoundation.org/UA/CNC/

#endif // #ifndef __OPCUACNCCNCCHANNELTYPE_H__

